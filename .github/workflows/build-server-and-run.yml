name: Deploy Server to AWS

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  build-and-deploy:
    name: Build and Deploy FastAPI to ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.FASTAPI_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "üõ† Building Docker image..."
          docker build --no-cache \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
            ./server

          echo "üì¶ Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Update ECS service with new task definition
        env:
          ECS_CLUSTER: ${{ secrets.FASTAPI_ECS_CLUSTER }}
          ECS_SERVICE: ${{ secrets.ECS_SERVICE }}
          ECS_TASK_DEFINITION: ${{ secrets.ECS_TASK_DEFINITION }}
          IMAGE_URI: ${{ steps.build-image.outputs.image }}
        run: |
          echo "üîç Fetching current task definition..."
          aws ecs describe-task-definition \
            --task-definition $ECS_TASK_DEFINITION \
            --output json > task-definition.json

          echo "üõ† Updating container image to: $IMAGE_URI"
          jq --arg IMAGE "$IMAGE_URI" \
            '.taskDefinition |
            {
              family,
              executionRoleArn,
              taskRoleArn,
              networkMode,
              containerDefinitions,
              volumes,
              placementConstraints,
              requiresCompatibilities,
              cpu,
              memory
            } |
            .containerDefinitions[0].image = $IMAGE' \
            task-definition.json > updated-task-definition.json

          echo "üìú Registering new task definition..."
          NEW_TASK_DEF=$(aws ecs register-task-definition --cli-input-json file://updated-task-definition.json)
          NEW_REVISION=$(echo "$NEW_TASK_DEF" | jq -r '.taskDefinition.revision')

          echo "üöÄ Deploying new revision: $NEW_REVISION"
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --task-definition $ECS_TASK_DEFINITION:$NEW_REVISION \
            --force-new-deployment

      - name: Report deployment status
        env:
          ECS_CLUSTER: ${{ secrets.FASTAPI_ECS_CLUSTER }}
          ECS_SERVICE: ${{ secrets.ECS_SERVICE }}
        run: |
          echo "‚úÖ Deployment started!"
          echo "üîÅ ECS Cluster: $ECS_CLUSTER"
          echo "üöÄ ECS Service: $ECS_SERVICE"
