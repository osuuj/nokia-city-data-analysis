services:
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-nokia_city_data}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

#  etl:
#    build:
#      context: ./etl
#    container_name: etl
#    depends_on:
#      db:
#        condition: service_healthy
#    env_file:
#      - .env.compose
#    environment:
#      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-nokia_city_data}
#      POSTGRES_HOST: db
#      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
#      POSTGRES_USER: ${POSTGRES_USER:-postgres}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
#      POSTGRES_DB: ${POSTGRES_DB:-nokia_city_data}
#      ENVIRONMENT: docker
#      SNAPSHOT_DATE: ${SNAPSHOT_DATE:-2025-05-11}
#      LANGUAGE: ${LANGUAGE:-en}
  
  server:
    # Build directly in compose for simplicity
    image: fastapi-dev
    build:
      context: .
      dockerfile: server/Dockerfile.dev
    container_name: fastapi
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-nokia_city_data}
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-nokia_city_data}
      ENVIRONMENT: ${ENVIRONMENT:-dev}
      LOG_LEVEL: ${LOG_LEVEL:-DEBUG}
      DEBUG: ${DEBUG:-true}
      BACKEND_CORS_ORIGINS: '${BACKEND_CORS_ORIGINS:-["http://localhost:3000"]}'
    volumes:
      - ./server:/app/server
    # Override command to enable hot-reload with mounted code
    command: uvicorn server.backend.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  next_cache: