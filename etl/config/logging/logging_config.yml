# Logging Configuration
#
# This file defines the logging setup for the ETL pipeline. It specifies:
# - Log levels, formats, and handlers for different logging scenarios (e.g., development, production).
# - Rotating file handlers for standard and debug logs.
# - Console output for real-time debugging and error logging.

version: 1

disable_existing_loggers: False

# Formatters for different logging levels
formatters:
  standard:
    format: '%(asctime)s - %(levelname)s - %(message)s'
  debug:
    format: '%(asctime)s - %(levelname)s - [%(module)s] %(message)s'
  error:
    format: '%(asctime)s - %(levelname)s - [%(module)s: %(lineno)d] %(message)s'

# Handlers for different destinations
handlers:
  console_debug:
    class: logging.StreamHandler
    level: DEBUG
    formatter: debug
  console_error:
    class: logging.StreamHandler
    level: ERROR
    formatter: error
  file_debug:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    filename: "{logs_dir}/etl_debug.log"
    maxBytes: 10485760
    backupCount: 5
    formatter: debug
  file_standard:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    filename: "{logs_dir}/etl.log"
    maxBytes: 10485760
    backupCount: 5
    formatter: standard

# Logger definitions
loggers:
  # Development logger
  development:
    handlers: ['console_debug', 'file_debug']
    level: DEBUG
    propagate: False

  # Production logger
  production:
    handlers: ['console_error', 'file_standard']
    level: ERROR
    propagate: False

  # ETL logger (shared for all operations)
  etl:
    handlers: ['console_debug', 'file_standard']
    level: INFO
    propagate: False

# Root logger
root:
  level: WARNING
  handlers: ['console_error']
